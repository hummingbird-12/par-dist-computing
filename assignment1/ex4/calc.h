/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _CALC_H_RPCGEN
#define _CALC_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct expression {
	int op1;
	int op2;
};
typedef struct expression expression;

#define CALC_PROG 0x20000000
#define CALC_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define ADDITION 1
extern  int * addition_1(expression *, CLIENT *);
extern  int * addition_1_svc(expression *, struct svc_req *);
#define PRODUCT 2
extern  int * product_1(expression *, CLIENT *);
extern  int * product_1_svc(expression *, struct svc_req *);
#define DIVISION 3
extern  int * division_1(expression *, CLIENT *);
extern  int * division_1_svc(expression *, struct svc_req *);
#define POWER 4
extern  int * power_1(expression *, CLIENT *);
extern  int * power_1_svc(expression *, struct svc_req *);
extern int calc_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define ADDITION 1
extern  int * addition_1();
extern  int * addition_1_svc();
#define PRODUCT 2
extern  int * product_1();
extern  int * product_1_svc();
#define DIVISION 3
extern  int * division_1();
extern  int * division_1_svc();
#define POWER 4
extern  int * power_1();
extern  int * power_1_svc();
extern int calc_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_expression (XDR *, expression*);

#else /* K&R C */
extern bool_t xdr_expression ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_CALC_H_RPCGEN */
